{"version":3,"file":"static/js/548.7dab0f2e.chunk.js","mappings":"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","sources":["api/get/getCategories.js","api/get/getTags.js","api/post/postCollection.js","api/post/postTag.js","components/form/CustomFields.jsx","pages/new-collection/NewCollection.jsx"],"sourcesContent":["export default async function getCategories(collectionId) {\n    const categories = await fetch('/api/get-categories')\n        .catch(error => console.log(error))\n    return await categories.json()\n}\n","export default async function getTags() {\n    const tags = await fetch('/api/get-tags')\n        .catch(error => console.log(error))\n    return await tags.json()\n}\n","import firebase from 'utils/firebase'\n\nexport default async function postCollection(title, category, tags, description, items, files) {\n    var data = new FormData()\n    data.append('title', title)\n    data.append('category', category)\n    data.append('tags', tags)\n    data.append('description', description)\n    data.append('items', JSON.stringify(items))\n    files.forEach(file => data.append(file.title, file.file))\n    await fetch('/api/post-collection', {\n        method: 'POST',\n        headers: {\n            'Token': await firebase.auth().currentUser.getIdToken()\n        },\n        body: data\n    })\n        .catch(error => console.log(error))\n}","import firebase from 'utils/firebase'\n\nexport default async function postTag(tag) {\n    fetch('/api/post-tag', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Token': await firebase.auth().currentUser.getIdToken()\n        },\n        body: JSON.stringify({ tag: tag }),\n    })\n        .catch(error => console.log(error))\n}","import { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Fragment, useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { useTranslation } from 'react-i18next'\n\nexport default function CustomFields({ items }) {\n    const { t } = useTranslation()\n    const [counter, setCounter] = useState(0)\n    const addItem = event => {\n        items.set(counter, new Map())\n        setCounter(counter + 1)\n    }\n    const removeItem = id => {\n        items.delete(id)\n        setCounter(counter + 1)\n    }\n    const addProperty = id => {\n        const title = document.getElementById('newFieldTitle' + id).value\n        const type = document.getElementById('newFieldType' + id).value\n        document.getElementById('newFieldTitle' + id).value = ''\n        items.get(id).set(title, type)\n        setCounter(counter + 1)\n    }\n    const deleteProperty = (id, title) => {\n        items.get(id).delete(title)\n        setCounter(counter + 1)\n    }\n    var elements = []\n    var i = 1\n    items.forEach((properties, id, map) => {\n        elements.push(\n            <Fragment key={'fragment' + id}>\n                <div className='d-flex' key={'header' + id}>\n                    <Button className='bg-transparent border-0 me-1' size='lg' variant='danger' onClick={event => removeItem(id)}>\n                        <FontAwesomeIcon icon={faMinus} color='red' />\n                    </Button>\n                    <Form.Control required key={'title' + id} size='lg' type='text' placeholder={t('uiItem', { i: i++ })} name={'title' + id} />\n                </div>\n            </Fragment>\n        )\n        items.get(id).forEach((type, title) => {\n            var element\n            if (type === 'boolean') {\n                element = <Form.Check key={title + id} type='checkbox' label={title} id={title + id} />\n            } else if (type === 'color') {\n                element =\n                    <div className='d-flex align-items-center'>\n                        <Form.Label className='me-3' variant='secondary'>{title}</Form.Label>\n                        <Form.Control key={title + id} type='color' name={title + id} />\n                    </div>\n            } else if (type === 'image') {\n                element = <Form.Control required type='file' id={title + id} accept='image/*' />\n            } else {\n                element = <Form.Control required key={title + id} type={items.get(id).get(title)} placeholder={title} name={title + id} />\n            }\n            elements.push(\n                <div className='d-flex my-3 align-items-center' key={'flex' + title + id}>\n                    <Button className='bg-transparent border-0 me-1' variant='danger' key={'removeFieldButton' + id} onClick={event => deleteProperty(id, title)}>\n                        <FontAwesomeIcon icon={faMinus} color='red' />\n                    </Button>\n                    <Form.Label className='mb-0 me-3'>\n                        {title + ':'}\n                    </Form.Label>\n                    {element}\n                </div>\n            )\n        })\n        elements.push(\n            <div className='d-flex my-3 align-items-center' key={'flex' + id}>\n                <Button className='bg-transparent border-0 me-1' variant='success' key={'addFieldButton' + id} onClick={event => addProperty(id)}>\n                    <FontAwesomeIcon icon={faPlus} color='green' />\n                </Button>\n                <Form.Label className='mb-0 me-3 text-nowrap'>\n                    {t('uiAddFieldPrompt')}\n                </Form.Label>\n                <Form.Control className='me-3' type='text' id={'newFieldTitle' + id} placeholder={t('uiNewFieldTitle')} key={'newFieldTitle' + id} />\n                <Form.Select id={'newFieldType' + id} key={'newFieldType' + id}>\n                    <option value='text'>{t('uiText')}</option>\n                    <option value='number'>{t('uiNumber')}</option>\n                    <option value='image'>{t('uiImage')}</option>\n                    <option value='date'>{t('uiDate')}</option>\n                    <option value='color'>{t('uiColor')}</option>\n                    <option value='boolean'>{t('uiBoolean')}</option>\n                </Form.Select>\n            </div>\n        )\n    })\n    return (\n        <>\n            {elements}\n            <Button className='float-end' variant='success' onClick={addItem}>\n                <FontAwesomeIcon className='me-1' icon={faPlus} />\n                {t('uiAddItem')}\n            </Button>\n        </>\n    )\n}\n\n/*\n<div className='d-flex my-3 align-items-center'>\n                <div className='text-muted'>\n                    {t('uiFields')}\n                </div>\n                <Button className='bg-transparent border-0 me-1' variant='success' onClick={event => console.log(event)}>\n                    <FontAwesomeIcon icon={faPlus} color='green' />\n                </Button>\n            </div>\n            <div className='d-flex my-3 align-items-center'>\n                <Form.Control className='me-3' type='text' id={'newFieldTitle'} placeholder={t('uiNewFieldTitle')} />\n                <Form.Select className='max-width-8' id={'newFieldType'}>\n                    <option value='text'>{t('uiText')}</option>\n                    <option value='number'>{t('uiNumber')}</option>\n                    <option value='image'>{t('uiImage')}</option>\n                    <option value='date'>{t('uiDate')}</option>\n                    <option value='color'>{t('uiColor')}</option>\n                    <option value='boolean'>{t('uiBoolean')}</option>\n                </Form.Select>\n            </div>\n            <div className='pt-3'>\n                {elements}\n            </div>\n*/","import getCategories from 'api/get/getCategories'\nimport fetchTags from 'api/get/getTags'\nimport postCollection from 'api/post/postCollection'\nimport postTag from 'api/post/postTag'\nimport CustomFields from 'components/form/CustomFields'\nimport { pathProfile } from 'paths'\nimport { useEffect, useState } from 'react'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport { Helmet } from 'react-helmet-async'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function NewCollection() {\n    const [items, setItems] = useState(new Map())\n    const [categories, setCategories] = useState([])\n    const [fetchedTags, setFetchedTags] = useState([])\n    const [tags, setTags] = useState([])\n    const navigate = useNavigate()\n    const { t } = useTranslation()\n    const handleChange = event => {\n        setTags(event)\n    }\n    useEffect(() => {\n        getCategories().then(result => setCategories(result))\n        fetchTags().then(result => setFetchedTags(result))\n    }, [])\n    const handleSubmit = async event => {\n        event.preventDefault()\n        const { title, category, description } = event.target.elements\n        for (var i = 0; i < tags.length; i++) {\n            if (tags[i]?.customOption) {\n                postTag(tags[i].label)\n                tags[i] = tags[i].label\n            }\n        }\n        var itemList = []\n        var files = []\n        items.forEach((properties, id) => {\n            var list = []\n            properties.forEach((type, title) => {\n                var value\n                if (type === 'boolean') {\n                    value = event.target.elements[title + id].checked.toString()\n                } else if (type === 'image') {\n                    files.push({ title: title, file: event.target.elements[title + id].files[0] })\n                } else {\n                    value = event.target.elements[title + id].value\n                }\n                list.push({\n                    title: title,\n                    type: type,\n                    value: value\n                })\n            })\n            itemList.push({\n                title: event.target.elements['title' + id].value,\n                properties: list\n            })\n        })\n        await postCollection(title.value, category.value, tags, description.value, itemList, files)\n        navigate(pathProfile)\n    }\n    return (\n        <Container fluid>\n            <Helmet>\n                <title>{t('pageNewCollection')}</title>\n            </Helmet>\n            <Form onSubmit={handleSubmit} className='new-collection-form me-auto ms-auto' id='newcollectionform'>\n                <Form.Group className='mb-3'>\n                    <Form.Control required type='text' name='title' placeholder={t('uiTitle')} />\n                </Form.Group>\n                <Form.Group className='mb-3'>\n                    <Form.Select name='category'>\n                        {\n                            categories.map(category => { return <option key={category} value={category}>{t(category)}</option> })\n                        }\n                    </Form.Select>\n                </Form.Group>\n                <Typeahead\n                    allowNew\n                    id='tags'\n                    multiple\n                    newSelectionPrefix={t('uiNewSelectionPrefix')}\n                    options={fetchedTags}\n                    placeholder={t('uiTags')}\n                    minLength={3}\n                    onChange={handleChange}\n                />\n                <Form.Group className='my-3'>\n                    <Form.Control required as='textarea' rows={3} name='description' placeholder={t('uiDescription')} />\n                </Form.Group>\n                <CustomFields items={items} />\n                <Button variant='primary me-2' type='submit'>\n                    {t('uiCreate')}\n                </Button>\n            </Form>\n        </Container>\n    )\n}\n"],"names":["collectionId","fetch","catch","error","console","log","categories","json","tags","postCollection","title","category","description","items","files","data","FormData","append","JSON","stringify","forEach","file","firebase","currentUser","getIdToken","method","headers","body","postTag","tag","CustomFields","t","useTranslation","useState","counter","setCounter","elements","i","properties","id","map","push","Fragment","className","Button","size","variant","onClick","event","delete","removeItem","icon","faMinus","color","Form","required","type","placeholder","name","get","element","label","accept","deleteProperty","document","getElementById","value","set","addProperty","faPlus","Map","NewCollection","setCategories","fetchedTags","setFetchedTags","setTags","navigate","useNavigate","useEffect","getCategories","then","result","fetchTags","handleSubmit","preventDefault","target","length","customOption","itemList","list","checked","toString","pathProfile","Container","fluid","onSubmit","allowNew","multiple","newSelectionPrefix","options","minLength","onChange","as","rows"],"sourceRoot":""}