{"version":3,"file":"static/js/283.91d87065.chunk.js","mappings":"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","sources":["api/get/getCollectionsByTag.js","api/get/getCollection.js","../node_modules/react-bootstrap/esm/Image.js","api/post/toggleLike.js","api/get/getLikeStatus.js","api/post/postComment.js","api/get/getComments.js","api/get/getLikes.js","pages/collection/Collection.jsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["export default async function getCollectionsByTag(tag) {\r\n    const collections = await fetch('/api/get-collections-by-tag?tag=' + tag)\r\n        .catch(error => console.log(error))\r\n    return await collections.json()\r\n}\r\n","export default async function fetchCollection(collectionId) {\r\n    const collection = await fetch('/api/get-collection?id=' + collectionId)\r\n        .catch(error => console.log(error))\r\n    return await collection.json()\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import firebase from 'utils/firebase'\r\n\r\nexport default async function toggleLike(collectionId) {\r\n    fetch('/api/toggle-like', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Token': await firebase.auth().currentUser.getIdToken()\r\n        },\r\n        body: JSON.stringify({ id: collectionId })\r\n    })\r\n        .catch(error => console.log(error))\r\n}","export default async function getLikeStatus(userId, collectionId) {\r\n    const collections = await fetch('/api/get-like-status?uid=' + userId + '&id=' + collectionId)\r\n        .catch(error => console.log(error))\r\n    return await collections.json()\r\n}\r\n","import firebase from 'utils/firebase'\r\n\r\nexport default async function postComment(uid, id, text) {\r\n    fetch('/api/post-comment', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Token': await firebase.auth().currentUser.getIdToken()\r\n        },\r\n        body: JSON.stringify({ uid: uid, id: id, text: text })\r\n    })\r\n        .catch(error => console.log(error))\r\n}","export default async function getComments(collectionId) {\r\n    const comments = await fetch('/api/get-comments?id=' + collectionId)\r\n        .catch(error => console.log(error))\r\n    return await comments.json()\r\n}\r\n","export default async function getLikes(collectionId) {\r\n    const likes = await fetch('/api/get-likes?id=' + collectionId)\r\n        .catch(error => console.log(error))\r\n    return await likes.json()\r\n}\r\n","import fetchCollection from 'api/get/getCollection'\r\nimport { Fragment, useContext, useEffect, useState } from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Image from 'react-bootstrap/Image'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useParams } from 'react-router-dom'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport remarkGfm from 'remark-gfm'\r\nimport toggleLike from 'api/post/toggleLike'\r\nimport { AuthenticationContext } from 'providers/AuthenticationProvider'\r\nimport fetchLikeStatus from 'api/get/getLikeStatus'\r\nimport { Form } from 'react-bootstrap'\r\nimport postComment from 'api/post/postComment'\r\nimport { SocketContext } from 'providers/SocketProvider'\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport fetchComments from 'api/get/getComments'\r\nimport getLikes from 'api/get/getLikes'\r\nimport getCollectionsByTag from 'api/get/getCollectionsByTag'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function Collection() {\r\n    const { t } = useTranslation()\r\n    const { collectionId } = useParams()\r\n    const [collection, setCollection] = useState(null)\r\n    const [comments, setComments] = useState([])\r\n    const [liked, setLiked] = useState(false)\r\n    const [likes, setLikes] = useState(0)\r\n    const { token } = useContext(AuthenticationContext)\r\n    const { socket } = useContext(SocketContext)\r\n    const navigate = useNavigate()\r\n    const handleClick = () => {\r\n        toggleLike(collectionId)\r\n    }\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        postComment(token.uid, collectionId, event.target.elements.comment.value)\r\n        event.target.elements.comment.value = ''\r\n    }\r\n    const handleTagClick = async tag => {\r\n        const collections = await getCollectionsByTag(tag)\r\n        navigate('/search', { state: collections })\r\n    }\r\n    useEffect(() => {\r\n        fetchCollection(collectionId).then(result => setCollection(result))\r\n        fetchComments(collectionId).then(result => setComments(result))\r\n        getLikes(collectionId).then(result => setLikes(result.value))\r\n        if (token) {\r\n            fetchLikeStatus(token.uid, collectionId).then(result => setLiked(result))\r\n        }\r\n        socket.emit('joined comment section', collectionId)\r\n        socket.on('new comment', comment => {\r\n            fetchComments(collectionId).then(result => setComments(result))\r\n        })\r\n        socket.on('toggle like', comment => {\r\n            getLikes(collectionId).then(result => setLikes(result.value))\r\n            fetchLikeStatus(token.uid, collectionId).then(result => setLiked(result))\r\n        })\r\n        return () => {\r\n            socket.emit('left comment section', collectionId)\r\n        }\r\n    }, [collectionId, socket, token])\r\n    var i = 0\r\n    return (\r\n        <Container fluid>\r\n            <div className='h1'>{collection?.title}</div>\r\n            <div className='h3'>{t('uiDescription')}</div>\r\n            <ListGroup className='mb-3'>\r\n                <ListGroup.Item>\r\n                    <ReactMarkdown children={collection?.description} remarkPlugins={[remarkGfm]} />\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n            <div className='h3'>{t('uiTags')}</div>\r\n            <ListGroup className='mb-3'>\r\n                <ListGroup.Item>\r\n                    {\r\n                        collection?.tags?.map(tag => tag !== '' && <Button onClick={event => handleTagClick(tag)} className='me-2'>{tag}</Button>)\r\n                    }\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n            {\r\n                collection?.items?.map(item =>\r\n                    <Fragment key={'fragment' + i}>\r\n                        <div className='h5 mt-4'>{item.title}</div>\r\n                        <ListGroup>\r\n                            {\r\n                                item.properties.map(property => {\r\n                                    var element\r\n                                    if (property.type === 'image') {\r\n                                        element = <Image className='item-image' src={property.value} />\r\n                                    } else if (property.type === 'color') {\r\n                                        element = <Form.Control type=\"color\" disabled={true} defaultValue={property.value} />\r\n                                    }\r\n                                    else {\r\n                                        element = <div>{property.value}</div>\r\n                                    }\r\n                                    return (\r\n                                        <ListGroup.Item key={'field' + i++}>\r\n                                            <div className='d-flex align-items-center' key={'flex' + i++}>\r\n                                                <div className='h6 me-5'>{property.title}</div>\r\n                                                {element}\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ListGroup>\r\n                    </Fragment>\r\n                )\r\n            }\r\n            <div className='d-flex align-items-center mb-3'>\r\n                <Button className='bg-transparent border-0 me-1' variant={liked ? 'danger' : 'secondary'} onClick={handleClick}><FontAwesomeIcon icon={faHeart} color={liked ? 'red' : 'gray'} /></Button>\r\n                <div>{likes + ' likes'}</div>\r\n            </div>\r\n            {\r\n                comments?.map((comment, index) => <div key={'div' + index}>{comment.user.name + ': ' + comment.comment}</div>)\r\n            }\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Control className='my-3' as='textarea' rows={3} name='comment' placeholder='Comment' />\r\n                <Button variant='primary' type='submit'>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["getCollectionsByTag","tag","fetch","catch","error","console","log","collections","json","collectionId","collection","Image","PropTypes","React","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","firebase","currentUser","getIdToken","JSON","stringify","id","method","headers","body","getLikeStatus","userId","uid","text","getComments","comments","getLikes","likes","Collection","t","useTranslation","useParams","useState","setCollection","setComments","liked","setLiked","setLikes","token","useContext","AuthenticationContext","socket","SocketContext","navigate","useNavigate","handleTagClick","state","useEffect","fetchCollection","then","result","fetchComments","value","fetchLikeStatus","emit","on","comment","i","Container","title","ListGroup","children","description","remarkPlugins","remarkGfm","tags","map","Button","onClick","event","items","item","Fragment","properties","property","element","type","src","Form","disabled","defaultValue","variant","toggleLike","icon","faHeart","color","index","user","name","onSubmit","preventDefault","postComment","target","elements","as","rows","placeholder","ListGroupItem","active","eventKey","action","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","stopPropagation","undefined","tabIndex","Component","isActive","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item"],"sourceRoot":""}