{"version":3,"file":"static/js/288.ec3da6b2.chunk.js","mappings":"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","sources":["api/post/signIn.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroup.js","components/form/PasswordInput.jsx","api/post/signUp.js","pages/sign-up/SignUp.jsx"],"sourcesContent":["import firebase from 'utils/firebase'\n\nexport default async function signIn(email, password) {\n    try {\n        await firebase.auth().signInWithEmailAndPassword(email, password)\n    } catch (error) {\n        if (error.code === 'auth/wrong-password') {\n            throw new Error('errWrongLogin')\n        } else if (error.code === 'auth/user-not-found') {\n            throw new Error('errUserNotFound')\n        } else {\n            throw error\n        }\n    }\n}\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import { faEye } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { useTranslation } from 'react-i18next'\n\nexport default function PasswordInput({ className }) {\n    const [reveal, setReveal] = useState(false)\n    const { t } = useTranslation()\n    var inputType = reveal ? 'text' : 'password'\n    return (\n        <InputGroup className={className}>\n            <Form.Control type={inputType} name='password' placeholder={t('uiPassword')} />\n            <Button onClick={() => setReveal(!reveal)}>\n                <FontAwesomeIcon icon={faEye} />\n            </Button>\n        </InputGroup>\n    )\n}\n","export default async function signUp(name, email, password) {\n    const response = await fetch('/api/sign-up', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ name: name, email: email, password: password })\n    })\n    if (!response.ok) {\n        throw new Error(await response.text())\n    }\n}\n","import signIn from 'api/post/signIn'\nimport signUp from 'api/post/signUp'\nimport PasswordInput from 'components/form/PasswordInput'\nimport { pathSignIn } from 'paths'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport { Helmet } from 'react-helmet-async'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nexport default function SignUp() {\n    const { t } = useTranslation()\n    const handleSignUp = async event => {\n        event.preventDefault()\n        event.stopPropagation()\n        const { name, email, password } = event.target.elements\n        try {\n            await signUp(name.value, email.value, password.value)\n            await signIn(email.value, password.value)\n        } catch (error) {\n            alert(t(error.message))\n        }\n    }\n    return (\n        <Container fluid>\n            <Helmet>\n                <title>{t('pageSignUp')}</title>\n            </Helmet>\n            <Form className='user-form ms-auto me-auto' onSubmit={handleSignUp}>\n                <Form.Control className='mb-3' type='text' name='name' placeholder={t('uiName')} />\n                <Form.Control className='mb-3' type='email' name='email' placeholder={t('uiEmail')} />\n                <PasswordInput className='mb-3' />\n                <Nav.Link className='mb-3 p-0' as={Link} to={pathSignIn}>\n                    {t('uiSignInPrompt')}\n                </Nav.Link>\n                <Button variant='primary' type='submit'>\n                    {t('uiSignUp')}\n                </Button>\n            </Form>\n        </Container>\n    )\n}\n"],"names":["signIn","email","password","firebase","signInWithEmailAndPassword","code","Error","context","React","displayName","InputGroupText","createWithBsPrefix","Component","InputGroup","ref","bsPrefix","size","hasValidation","className","as","props","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","Provider","value","children","classNames","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","PasswordInput","useState","reveal","setReveal","t","useTranslation","inputType","Form","name","placeholder","Button","onClick","icon","faEye","signUp","fetch","method","headers","body","JSON","stringify","response","ok","text","SignUp","handleSignUp","event","preventDefault","stopPropagation","target","elements","alert","message","Container","fluid","onSubmit","Nav","Link","to","pathSignIn","variant"],"sourceRoot":""}