{"version":3,"file":"static/js/548.bd0f7739.chunk.js","mappings":"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","sources":["api/get/getCategories.js","api/get/getTags.js","api/post/postCollection.js","api/post/postTag.js","components/form/CustomFields.jsx","pages/new-collection/NewCollection.jsx"],"sourcesContent":["export default async function getCategories(collectionId) {\r\n    const categories = await fetch('/api/get-categories')\r\n        .catch(error => console.log(error))\r\n    return await categories.json()\r\n}\r\n","export default async function getTags() {\r\n    const tags = await fetch('/api/get-tags')\r\n        .catch(error => console.log(error))\r\n    return await tags.json()\r\n}\r\n","import firebase from 'utils/firebase'\r\n\r\nexport default async function postCollection(title, category, tags, description, items, files) {\r\n    var data = new FormData()\r\n    data.append('title', title)\r\n    data.append('category', category)\r\n    data.append('tags', tags)\r\n    data.append('description', description)\r\n    data.append('items', JSON.stringify(items))\r\n    files.forEach(file => data.append(file.title, file.file))\r\n    await fetch('/api/post-collection', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Token': await firebase.auth().currentUser.getIdToken()\r\n        },\r\n        body: data\r\n    })\r\n        .catch(error => console.log(error))\r\n}","import firebase from 'utils/firebase'\r\n\r\nexport default async function postTag(tag) {\r\n    fetch('/api/post-tag', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Token': await firebase.auth().currentUser.getIdToken()\r\n        },\r\n        body: JSON.stringify({ tag: tag }),\r\n    })\r\n        .catch(error => console.log(error))\r\n}","import { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Fragment, useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\n// TODO: separate this into components\r\n\r\nexport default function CustomFields({ items }) {\r\n    const { t } = useTranslation()\r\n    const [counter, setCounter] = useState(0)\r\n    const addItem = event => {\r\n        items.set(counter, new Map())\r\n        setCounter(counter + 1)\r\n    }\r\n    const removeItem = id => {\r\n        items.delete(id)\r\n        setCounter(counter + 1)\r\n    }\r\n    const addProperty = id => {\r\n        const title = document.getElementById('newFieldTitle' + id).value\r\n        const type = document.getElementById('newFieldType' + id).value\r\n        document.getElementById('newFieldTitle' + id).value = ''\r\n        items.get(id).set(title, type)\r\n        setCounter(counter + 1)\r\n    }\r\n    const deleteProperty = (id, title) => {\r\n        items.get(id).delete(title)\r\n        setCounter(counter + 1)\r\n    }\r\n    var elements = []\r\n    var i = 1\r\n    items.forEach((properties, id, map) => {\r\n        elements.push(\r\n            <Fragment key={'fragment' + id}>\r\n                <div className='h4 mt-3 d-flex' key={'header' + id}>\r\n                    <Button className='bg-transparent border-0 me-1' variant='danger' onClick={event => removeItem(id)}>\r\n                        <FontAwesomeIcon icon={faMinus} color='red' />\r\n                    </Button>\r\n                    <Form.Control required key={'title' + id} size='lg' type='text' placeholder={t('uiItem', { i: i++ })} name={'title' + id} />\r\n                </div>\r\n                {\r\n                    items.get(id).size < 1 &&\r\n                    <div className='text-muted'>\r\n                        {t('uiAddFieldPrompt')}\r\n                    </div>\r\n                }\r\n            </Fragment>\r\n        )\r\n        items.get(id).forEach((type, title) => {\r\n            var element\r\n            if (type === 'boolean') {\r\n                element = <Form.Check key={title + id} type='checkbox' label={title} id={title + id} />\r\n            } else if (type === 'color') {\r\n                element =\r\n                    <div className='d-flex align-items-center'>\r\n                        <Form.Label className='me-3' variant='secondary'>{title}</Form.Label>\r\n                        <Form.Control key={title + id} type='color' name={title + id} />\r\n                    </div>\r\n            } else if (type === 'image') {\r\n                element = <Form.Control required type='file' id={title + id} accept='image/*' />\r\n            } else {\r\n                element = <Form.Control required key={title + id} type={items.get(id).get(title)} placeholder={title} name={title + id} />\r\n            }\r\n            elements.push(\r\n                <div className='d-flex my-3' key={'flex' + title + id}>\r\n                    <Button className='bg-transparent border-0 me-1' variant='danger' key={'removeFieldButton' + id} onClick={event => deleteProperty(id, title)}>\r\n                        <FontAwesomeIcon icon={faMinus} color='red' />\r\n                    </Button>\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        elements.push(\r\n            <div className='d-flex my-3' key={'flex' + id}>\r\n                <Button className='bg-transparent border-0 me-1' variant='success' key={'addFieldButton' + id} onClick={event => addProperty(id)}>\r\n                    <FontAwesomeIcon icon={faPlus} color='green' />\r\n                </Button>\r\n                <Form.Control className='me-3' type='text' id={'newFieldTitle' + id} placeholder={t('uiNewFieldTitle')} key={'newFieldTitle' + id} />\r\n                <Form.Select className='max-width-8' id={'newFieldType' + id} key={'newFieldType' + id}>\r\n                    <option value='text'>{t('uiText')}</option>\r\n                    <option value='number'>{t('uiNumber')}</option>\r\n                    <option value='image'>{t('uiImage')}</option>\r\n                    <option value='date'>{t('uiDate')}</option>\r\n                    <option value='color'>{t('uiColor')}</option>\r\n                    <option value='boolean'>{t('uiBoolean')}</option>\r\n                </Form.Select>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <>\r\n            {elements}\r\n            <Button className='float-end' variant='success' onClick={addItem}>\r\n                <FontAwesomeIcon className='me-1' icon={faPlus} />\r\n                {t('uiAddItem')}\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\n/*\r\n<div className='d-flex my-3 align-items-center'>\r\n                <div className='text-muted'>\r\n                    {t('uiFields')}\r\n                </div>\r\n                <Button className='bg-transparent border-0 me-1' variant='success' onClick={event => console.log(event)}>\r\n                    <FontAwesomeIcon icon={faPlus} color='green' />\r\n                </Button>\r\n            </div>\r\n            <div className='d-flex my-3 align-items-center'>\r\n                <Form.Control className='me-3' type='text' id={'newFieldTitle'} placeholder={t('uiNewFieldTitle')} />\r\n                <Form.Select className='max-width-8' id={'newFieldType'}>\r\n                    <option value='text'>{t('uiText')}</option>\r\n                    <option value='number'>{t('uiNumber')}</option>\r\n                    <option value='image'>{t('uiImage')}</option>\r\n                    <option value='date'>{t('uiDate')}</option>\r\n                    <option value='color'>{t('uiColor')}</option>\r\n                    <option value='boolean'>{t('uiBoolean')}</option>\r\n                </Form.Select>\r\n            </div>\r\n            <div className='pt-3'>\r\n                {elements}\r\n            </div>\r\n*/","import getCategories from 'api/get/getCategories'\r\nimport fetchTags from 'api/get/getTags'\r\nimport postCollection from 'api/post/postCollection'\r\nimport postTag from 'api/post/postTag'\r\nimport CustomFields from 'components/form/CustomFields'\r\nimport { pathProfile } from 'paths'\r\nimport { useEffect, useState } from 'react'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function NewCollection() {\r\n    const { t } = useTranslation()\r\n    const navigate = useNavigate()\r\n    const [items, setItems] = useState(new Map())\r\n    const [categories, setCategories] = useState([])\r\n    const [fetchedTags, setFetchedTags] = useState([])\r\n    const [tags, setTags] = useState([])\r\n    const handleChange = event => {\r\n        setTags(event)\r\n    }\r\n    useEffect(() => {\r\n        getCategories().then(result => setCategories(result))\r\n        fetchTags().then(result => setFetchedTags(result))\r\n    }, [])\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n        const { title, category, description } = event.target.elements\r\n        for (var i = 0; i < tags.length; i++) {\r\n            if (tags[i]?.customOption) {\r\n                postTag(tags[i].label)\r\n                tags[i] = tags[i].label\r\n            }\r\n        }\r\n        var itemList = []\r\n        var files = []\r\n        items.forEach((properties, id) => {\r\n            var list = []\r\n            properties.forEach((type, title) => {\r\n                var value\r\n                if (type === 'boolean') {\r\n                    value = event.target.elements[title + id].checked.toString()\r\n                } else if (type === 'image') {\r\n                    files.push({ title: title, file: event.target.elements[title + id].files[0] })\r\n                } else {\r\n                    value = event.target.elements[title + id].value\r\n                }\r\n                list.push({\r\n                    title: title,\r\n                    type: type,\r\n                    value: value\r\n                })\r\n            })\r\n            itemList.push({\r\n                title: event.target.elements['title' + id].value,\r\n                properties: list\r\n            })\r\n        })\r\n        await postCollection(title.value, category.value, tags, description.value, itemList, files)\r\n        navigate(pathProfile)\r\n    }\r\n    return (\r\n        <Container className='max-width-60 justify-content-center'>\r\n            <Helmet>\r\n                <title>{t('pageNewCollection')}</title>\r\n            </Helmet>\r\n            <Form onSubmit={handleSubmit} id='newcollectionform'>\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Control required type='text' name='title' placeholder={t('uiTitle')} />\r\n                </Form.Group>\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Select name='category'>\r\n                        {\r\n                            categories.map(category => { return <option key={category} value={category}>{t(category)}</option> })\r\n                        }\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Typeahead\r\n                    allowNew\r\n                    id='tags'\r\n                    multiple\r\n                    newSelectionPrefix={t('uiNewSelectionPrefix')}\r\n                    options={fetchedTags}\r\n                    placeholder={t('uiTags')}\r\n                    minLength={3}\r\n                    onChange={handleChange}\r\n                />\r\n                <Form.Group className='my-3'>\r\n                    <Form.Control as='textarea' rows={3} name='description' placeholder={t('uiDescription')} />\r\n                </Form.Group>\r\n                <CustomFields items={items} />\r\n                <Button variant='primary me-2' type='submit'>\r\n                    {t('uiCreate')}\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n"],"names":["collectionId","fetch","catch","error","console","log","categories","json","tags","postCollection","title","category","description","items","files","data","FormData","append","JSON","stringify","forEach","file","firebase","currentUser","getIdToken","method","headers","body","postTag","tag","CustomFields","t","useTranslation","useState","counter","setCounter","elements","i","properties","id","map","push","Fragment","className","Button","variant","onClick","event","delete","removeItem","icon","faMinus","color","Form","required","size","type","placeholder","name","get","element","label","accept","deleteProperty","document","getElementById","value","set","addProperty","faPlus","Map","NewCollection","navigate","useNavigate","setCategories","fetchedTags","setFetchedTags","setTags","useEffect","getCategories","then","result","fetchTags","handleSubmit","preventDefault","target","length","customOption","itemList","list","checked","toString","pathProfile","Container","onSubmit","allowNew","multiple","newSelectionPrefix","options","minLength","onChange","as","rows"],"sourceRoot":""}