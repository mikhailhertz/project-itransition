{"version":3,"file":"static/js/410.2da55d4d.chunk.js","mappings":"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","sources":["api/get/getUsers.js","api/post/blockUser.js","api/post/unblockUser.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","pages/admin/Admin.jsx"],"sourcesContent":["import firebase from 'utils/firebase'\n\nexport default async function getUsers() {\n    const users = await fetch('/api/get-users', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Token': await firebase.auth().currentUser.getIdToken()\n        }\n    })\n        .catch(error => console.log(error))\n    return await users.json()\n}\n","import firebase from 'utils/firebase'\n\nexport default async function blockUser(userId) {\n    fetch('/api/block-user', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Token': await firebase.auth().currentUser.getIdToken()\n        },\n        body: JSON.stringify({ uid: userId })\n    })\n        .catch(error => console.log(error))\n}","import firebase from 'utils/firebase'\n\nexport default async function unblockUser(userId) {\n    fetch('/api/unblock-user', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Token': await firebase.auth().currentUser.getIdToken()\n        },\n        body: JSON.stringify({ uid: userId })\n    })\n        .catch(error => console.log(error))\n}","import * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","import * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import getUsers from 'api/get/getUsers'\nimport blockUser from 'api/post/blockUser'\nimport unblockUser from 'api/post/unblockUser'\nimport { pathProfile } from 'paths'\nimport { useEffect, useState } from 'react'\nimport { Accordion } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport { Helmet } from 'react-helmet-async'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\n\nexport default function Admin() {\n    const [users, setUsers] = useState(new Map())\n    const [hack, setHack] = useState(false)\n    const { t } = useTranslation()\n    useEffect(() => {\n        getUsers().then(result => {\n            const kv = result.map(user => [user._id, {\n                name: user.name,\n                admin: user.admin,\n                blocked: user.blocked\n            }])\n            setUsers(new Map(kv))\n        })\n    }, [])\n    const handleToggleBlock = event => {\n        var user = users.get(event.target.value)\n        user.blocked ? unblockUser(event.target.value) : blockUser(event.target.value)\n        user.blocked = !user.blocked\n        setHack(!hack)\n    }\n    return (\n        <Container>\n            <Helmet>\n                <title>{t('pageAdmin')}</title>\n            </Helmet>\n            <Accordion>\n                {\n                    Array.from(users, ([id, properties], i) =>\n                        <Accordion.Item key={'AdminAccordionItem' + i} eventKey={i}>\n                            <Accordion.Header key={'AdminAccordionHeader' + i}>\n                                <div key={'AdminDivItem' + i}>\n                                    <h4 key={'AdminH4' + i}>\n                                        {properties.name}\n                                    </h4>\n                                    <div key={'AdminDivInfo' + i} className='text-muted'>\n                                        {\n                                            id + (properties.admin ? `, ${t('uiAdmin')} ` : '') + (properties.blocked ? `, ${t('uiBlocked')}` : '')\n                                        }\n                                    </div>\n                                </div>\n                            </Accordion.Header>\n                            <Accordion.Body key={'AdminAccordionBody' + i}>\n                                <Button\n                                    key={'AdminButtonProfile' + i}\n                                    as={Link}\n                                    to={pathProfile + '/' + id}\n                                >\n                                    {t('uiProfile')}\n                                </Button>\n                                <div key={'AdminDivButtons' + i} className='float-end'>\n                                    <Button\n                                        key={'AdminButtonBlock' + i}\n                                        className='me-2'\n                                        variant={properties.blocked ? 'success' : 'danger'}\n                                        value={id}\n                                        onClick={handleToggleBlock}\n                                    >\n                                        {properties.blocked ? t('uiUnblock') : t('uiBlock')}\n                                    </Button>\n                                    <Button\n                                        key={'AdminButtonAdmin' + i}\n                                        variant={properties.admin ? 'danger' : 'success'}\n                                        value={id}\n                                    >\n                                        {properties.admin ? t('uiRevokeAdmin') : t('uiMakeAdmin')}\n                                    </Button>\n                                </div>\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    )\n                }\n            </Accordion>\n        </Container>\n    )\n}\n"],"names":["fetch","firebase","currentUser","getIdToken","method","headers","catch","error","console","log","users","json","userId","JSON","stringify","uid","body","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","ref","as","Component","bsPrefix","className","children","props","useContext","AccordionContext","useBootstrapPrefix","_jsx","Collapse","in","classNames","AccordionBody","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","Accordion","useUncontrolled","activeKey","flush","controlledProps","prefix","Object","assign","Button","Item","Header","Body","Admin","useState","Map","setUsers","hack","setHack","t","useTranslation","useEffect","getUsers","then","result","kv","map","user","_id","name","admin","blocked","handleToggleBlock","event","get","target","unblockUser","blockUser","Container","from","i","id","properties","Link","to","pathProfile","variant"],"sourceRoot":""}